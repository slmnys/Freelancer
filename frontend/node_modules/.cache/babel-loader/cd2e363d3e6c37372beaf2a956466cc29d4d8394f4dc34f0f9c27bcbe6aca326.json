{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nexport function useSocket(projectId) {\n  _s();\n  const socketRef = useRef(null);\n  useEffect(() => {\n    // Token kontrolü\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('Token bulunamadı');\n      return;\n    }\n    const socket = io('http://localhost:3000', {\n      withCredentials: true,\n      auth: {\n        token\n      },\n      transports: ['polling', 'websocket'],\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    socket.on('connect', () => {\n      console.log('Socket bağlandı');\n      if (projectId) {\n        socket.emit('joinRoom', projectId);\n      }\n    });\n    socket.on('connect_error', error => {\n      console.error('Socket bağlantı hatası:', error);\n    });\n    socketRef.current = socket;\n    return () => {\n      if (socket.connected) {\n        socket.disconnect();\n      }\n    };\n  }, [projectId]);\n  return socketRef;\n}\n_s(useSocket, \"8c0rAI93JE8jpOVTnobt43KkFfY=\");","map":{"version":3,"names":["useEffect","useRef","io","useSocket","projectId","_s","socketRef","token","localStorage","getItem","console","error","socket","withCredentials","auth","transports","reconnectionAttempts","reconnectionDelay","on","log","emit","current","connected","disconnect"],"sources":["C:/Users/suleymanyasar/Desktop/çalışmalar/cursor2/frontend/src/hooks/useSocket.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\nexport function useSocket(projectId?: string) {\r\n  const socketRef = useRef<Socket | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Token kontrolü\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      console.error('Token bulunamadı');\r\n      return;\r\n    }\r\n\r\n    const socket = io('http://localhost:3000', {\r\n      withCredentials: true,\r\n      auth: { token },\r\n      transports: ['polling', 'websocket'],\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Socket bağlandı');\r\n      if (projectId) {\r\n        socket.emit('joinRoom', projectId);\r\n      }\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('Socket bağlantı hatası:', error);\r\n    });\r\n\r\n    socketRef.current = socket;\r\n\r\n    return () => {\r\n      if (socket.connected) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, [projectId]);\r\n\r\n  return socketRef;\r\n} "],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,EAAE,QAAgB,kBAAkB;AAE7C,OAAO,SAASC,SAASA,CAACC,SAAkB,EAAE;EAAAC,EAAA;EAC5C,MAAMC,SAAS,GAAGL,MAAM,CAAgB,IAAI,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVG,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACF;IAEA,MAAMC,MAAM,GAAGV,EAAE,CAAC,uBAAuB,EAAE;MACzCW,eAAe,EAAE,IAAI;MACrBC,IAAI,EAAE;QAAEP;MAAM,CAAC;MACfQ,UAAU,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;MACpCC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEFL,MAAM,CAACM,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBR,OAAO,CAACS,GAAG,CAAC,iBAAiB,CAAC;MAC9B,IAAIf,SAAS,EAAE;QACbQ,MAAM,CAACQ,IAAI,CAAC,UAAU,EAAEhB,SAAS,CAAC;MACpC;IACF,CAAC,CAAC;IAEFQ,MAAM,CAACM,EAAE,CAAC,eAAe,EAAGP,KAAK,IAAK;MACpCD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;IAEFL,SAAS,CAACe,OAAO,GAAGT,MAAM;IAE1B,OAAO,MAAM;MACX,IAAIA,MAAM,CAACU,SAAS,EAAE;QACpBV,MAAM,CAACW,UAAU,CAAC,CAAC;MACrB;IACF,CAAC;EACH,CAAC,EAAE,CAACnB,SAAS,CAAC,CAAC;EAEf,OAAOE,SAAS;AAClB;AAACD,EAAA,CAxCeF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}