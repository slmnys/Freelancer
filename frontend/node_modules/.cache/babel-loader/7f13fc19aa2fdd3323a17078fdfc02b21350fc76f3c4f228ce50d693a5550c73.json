{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nexport function useSocket(projectId) {\n  _s();\n  const socketRef = useRef(null);\n  useEffect(() => {\n    const SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:3000';\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('Token bulunamadı');\n      return;\n    }\n    const socket = io(SOCKET_URL, {\n      path: '/socket.io/',\n      // Backend'deki path ile aynı olmalı\n      withCredentials: true,\n      auth: {\n        token: `Bearer ${token}` // Token'ı Bearer formatında gönder\n      },\n      transports: ['websocket', 'polling'] // Bağlantı tiplerini belirt\n    });\n    socket.on('connect_error', error => {\n      console.error('Socket bağlantı hatası:', error);\n    });\n    socketRef.current = socket;\n    if (projectId) {\n      socket.emit('joinRoom', projectId);\n    }\n    return () => {\n      socket.disconnect();\n    };\n  }, [projectId]);\n  return socketRef;\n}\n_s(useSocket, \"8c0rAI93JE8jpOVTnobt43KkFfY=\");","map":{"version":3,"names":["useEffect","useRef","io","useSocket","projectId","_s","socketRef","SOCKET_URL","process","env","REACT_APP_SOCKET_URL","token","localStorage","getItem","console","error","socket","path","withCredentials","auth","transports","on","current","emit","disconnect"],"sources":["C:/Users/suleymanyasar/Desktop/çalışmalar/cursor2/frontend/src/hooks/useSocket.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\nexport function useSocket(projectId?: string) {\r\n  const socketRef = useRef<Socket | null>(null);\r\n\r\n  useEffect(() => {\r\n    const SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:3000';\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      console.error('Token bulunamadı');\r\n      return;\r\n    }\r\n\r\n    const socket = io(SOCKET_URL, {\r\n      path: '/socket.io/',  // Backend'deki path ile aynı olmalı\r\n      withCredentials: true,\r\n      auth: {\r\n        token: `Bearer ${token}`  // Token'ı Bearer formatında gönder\r\n      },\r\n      transports: ['websocket', 'polling']  // Bağlantı tiplerini belirt\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('Socket bağlantı hatası:', error);\r\n    });\r\n\r\n    socketRef.current = socket;\r\n\r\n    if (projectId) {\r\n      socket.emit('joinRoom', projectId);\r\n    }\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [projectId]);\r\n\r\n  return socketRef;\r\n} "],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,EAAE,QAAgB,kBAAkB;AAE7C,OAAO,SAASC,SAASA,CAACC,SAAkB,EAAE;EAAAC,EAAA;EAC5C,MAAMC,SAAS,GAAGL,MAAM,CAAgB,IAAI,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,uBAAuB;IAC9E,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVG,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACF;IAEA,MAAMC,MAAM,GAAGd,EAAE,CAACK,UAAU,EAAE;MAC5BU,IAAI,EAAE,aAAa;MAAG;MACtBC,eAAe,EAAE,IAAI;MACrBC,IAAI,EAAE;QACJR,KAAK,EAAE,UAAUA,KAAK,EAAE,CAAE;MAC5B,CAAC;MACDS,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC,CAAE;IACxC,CAAC,CAAC;IAEFJ,MAAM,CAACK,EAAE,CAAC,eAAe,EAAGN,KAAK,IAAK;MACpCD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;IAEFT,SAAS,CAACgB,OAAO,GAAGN,MAAM;IAE1B,IAAIZ,SAAS,EAAE;MACbY,MAAM,CAACO,IAAI,CAAC,UAAU,EAAEnB,SAAS,CAAC;IACpC;IAEA,OAAO,MAAM;MACXY,MAAM,CAACQ,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACpB,SAAS,CAAC,CAAC;EAEf,OAAOE,SAAS;AAClB;AAACD,EAAA,CArCeF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}