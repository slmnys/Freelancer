{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suleymanyasar\\\\Desktop\\\\\\xE7al\\u0131\\u015Fmalar\\\\cursor2\\\\frontend\\\\src\\\\components\\\\NotificationBadge.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Badge, IconButton, Menu, MenuItem, Typography, Box, Divider, Avatar } from '@mui/material';\nimport { Mail as MailIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { useSocket } from '../hooks/useSocket';\nimport api from '../utils/axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NotificationBadge() {\n  _s();\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const navigate = useNavigate();\n  const socket = useSocket();\n  useEffect(() => {\n    fetchUnreadMessages();\n    const currentSocket = socket.current;\n    if (currentSocket) {\n      currentSocket.on('connect', () => {\n        console.log('Socket bağlandı');\n        fetchUnreadMessages();\n      });\n      currentSocket.on('newMessage', message => {\n        console.log('Yeni mesaj alındı:', message);\n        if (message.recipient_id === localStorage.getItem('userId')) {\n          fetchUnreadMessages();\n        }\n      });\n    }\n    const interval = setInterval(fetchUnreadMessages, 10000); // Her 10 saniyede bir kontrol\n\n    return () => {\n      currentSocket === null || currentSocket === void 0 ? void 0 : currentSocket.off('newMessage');\n      currentSocket === null || currentSocket === void 0 ? void 0 : currentSocket.off('connect');\n      clearInterval(interval);\n    };\n  }, [socket]);\n  const fetchUnreadMessages = async () => {\n    try {\n      const response = await api.get('/messages/unread');\n      console.log('Okunmamış Mesajlar Yanıtı:', response.data);\n      if (response.data.success && Array.isArray(response.data.data)) {\n        const formattedMessages = response.data.data.map(msg => ({\n          id: msg.id,\n          content: msg.content || msg.message_content || 'Mesaj içeriği yok',\n          sender_name: msg.sender_name,\n          sender_id: msg.sender_id,\n          project_id: msg.project_id,\n          project_title: msg.project_title,\n          created_at: msg.created_at,\n          read: false\n        }));\n        setMessages(formattedMessages);\n        setUnreadCount(formattedMessages.length);\n        console.log('İşlenmiş Mesajlar:', formattedMessages);\n      }\n    } catch (error) {\n      console.error('Mesaj getirme hatası:', error);\n    }\n  };\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleMessageClick = async message => {\n    try {\n      await api.put(`/messages/${message.id}/read`);\n\n      // Mesajı okundu olarak işaretle ve listeden kaldır\n      setMessages(prev => prev.filter(m => m.id !== message.id));\n      setUnreadCount(prev => prev - 1);\n\n      // Proje detay sayfasına yönlendir ve sohbeti aç\n      navigate(`/projects/${message.project_id}`, {\n        state: {\n          openChat: true,\n          recipientId: message.sender_id.toString()\n        }\n      });\n      handleClose();\n    } catch (error) {\n      console.error('Mesaj işlenemedi:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"inherit\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: unreadCount,\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      PaperProps: {\n        sx: {\n          width: 320,\n          maxHeight: 400\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Mesajlar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), messages.length === 0 ? /*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Yeni mesaj yok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : messages.map(message => {\n        var _message$sender_name;\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => handleMessageClick(message),\n          sx: {\n            py: 1.5,\n            px: 2,\n            borderBottom: '1px solid',\n            borderColor: 'divider'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'flex-start',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                width: 32,\n                height: 32\n              },\n              children: ((_message$sender_name = message.sender_name) === null || _message$sender_name === void 0 ? void 0 : _message$sender_name.charAt(0)) || '?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: message.sender_name || 'Bilinmeyen Kullanıcı'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                noWrap: true,\n                children: message.content || 'Mesaj içeriği yok'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: message.created_at ? new Date(message.created_at).toLocaleString('tr-TR') : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(NotificationBadge, \"RY8sSlID/63pQ2IcI/KUeRjDwBM=\", false, function () {\n  return [useNavigate, useSocket];\n});\n_c = NotificationBadge;\nvar _c;\n$RefreshReg$(_c, \"NotificationBadge\");","map":{"version":3,"names":["React","useState","useEffect","Badge","IconButton","Menu","MenuItem","Typography","Box","Divider","Avatar","Mail","MailIcon","useNavigate","useSocket","api","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationBadge","_s","unreadCount","setUnreadCount","messages","setMessages","anchorEl","setAnchorEl","navigate","socket","fetchUnreadMessages","currentSocket","current","on","console","log","message","recipient_id","localStorage","getItem","interval","setInterval","off","clearInterval","response","get","data","success","Array","isArray","formattedMessages","map","msg","id","content","message_content","sender_name","sender_id","project_id","project_title","created_at","read","length","error","handleClick","event","currentTarget","handleClose","handleMessageClick","put","prev","filter","m","state","openChat","recipientId","toString","children","color","onClick","badgeContent","fileName","_jsxFileName","lineNumber","columnNumber","open","Boolean","onClose","PaperProps","sx","width","maxHeight","p","variant","disabled","_message$sender_name","py","px","borderBottom","borderColor","display","alignItems","gap","height","charAt","noWrap","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/suleymanyasar/Desktop/çalışmalar/cursor2/frontend/src/components/NotificationBadge.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Badge,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n  Box,\r\n  Divider,\r\n  Avatar\r\n} from '@mui/material';\r\nimport { Mail as MailIcon } from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSocket } from '../hooks/useSocket';\r\nimport api from '../utils/axios';\r\n\r\ninterface Message {\r\n  id: string;\r\n  content: string;\r\n  sender_name: string;\r\n  sender_id: string;\r\n  project_id: number;\r\n  project_title: string;\r\n  created_at: string;\r\n  read: boolean;\r\n}\r\n\r\nexport function NotificationBadge() {\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const navigate = useNavigate();\r\n  const socket = useSocket();\r\n\r\n  useEffect(() => {\r\n    fetchUnreadMessages();\r\n    \r\n    const currentSocket = socket.current;\r\n    \r\n    if (currentSocket) {\r\n      currentSocket.on('connect', () => {\r\n        console.log('Socket bağlandı');\r\n        fetchUnreadMessages();\r\n      });\r\n      \r\n      currentSocket.on('newMessage', (message) => {\r\n        console.log('Yeni mesaj alındı:', message);\r\n        if (message.recipient_id === localStorage.getItem('userId')) {\r\n          fetchUnreadMessages();\r\n        }\r\n      });\r\n    }\r\n\r\n    const interval = setInterval(fetchUnreadMessages, 10000); // Her 10 saniyede bir kontrol\r\n\r\n    return () => {\r\n      currentSocket?.off('newMessage');\r\n      currentSocket?.off('connect');\r\n      clearInterval(interval);\r\n    };\r\n  }, [socket]);\r\n\r\n  const fetchUnreadMessages = async () => {\r\n    try {\r\n      const response = await api.get('/messages/unread');\r\n      console.log('Okunmamış Mesajlar Yanıtı:', response.data);\r\n      \r\n      if (response.data.success && Array.isArray(response.data.data)) {\r\n        const formattedMessages = response.data.data.map((msg: any) => ({\r\n          id: msg.id,\r\n          content: msg.content || msg.message_content || 'Mesaj içeriği yok',\r\n          sender_name: msg.sender_name,\r\n          sender_id: msg.sender_id,\r\n          project_id: msg.project_id,\r\n          project_title: msg.project_title,\r\n          created_at: msg.created_at,\r\n          read: false\r\n        }));\r\n\r\n        setMessages(formattedMessages);\r\n        setUnreadCount(formattedMessages.length);\r\n        console.log('İşlenmiş Mesajlar:', formattedMessages);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Mesaj getirme hatası:', error);\r\n    }\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMessageClick = async (message: Message) => {\r\n    try {\r\n      await api.put(`/messages/${message.id}/read`);\r\n      \r\n      // Mesajı okundu olarak işaretle ve listeden kaldır\r\n      setMessages(prev => prev.filter(m => m.id !== message.id));\r\n      setUnreadCount(prev => prev - 1);\r\n      \r\n      // Proje detay sayfasına yönlendir ve sohbeti aç\r\n      navigate(`/projects/${message.project_id}`, {\r\n        state: {\r\n          openChat: true,\r\n          recipientId: message.sender_id.toString()\r\n        }\r\n      });\r\n      \r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Mesaj işlenemedi:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton color=\"inherit\" onClick={handleClick}>\r\n        <Badge badgeContent={unreadCount} color=\"error\">\r\n          <MailIcon />\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          sx: { width: 320, maxHeight: 400 }\r\n        }}\r\n      >\r\n        <Box sx={{ p: 2 }}>\r\n          <Typography variant=\"h6\">Mesajlar</Typography>\r\n        </Box>\r\n        <Divider />\r\n        \r\n        {messages.length === 0 ? (\r\n          <MenuItem disabled>\r\n            <Typography variant=\"body2\">Yeni mesaj yok</Typography>\r\n          </MenuItem>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <MenuItem \r\n              key={message.id} \r\n              onClick={() => handleMessageClick(message)}\r\n              sx={{ \r\n                py: 1.5,\r\n                px: 2,\r\n                borderBottom: '1px solid',\r\n                borderColor: 'divider'\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-start', gap: 1 }}>\r\n                <Avatar sx={{ width: 32, height: 32 }}>\r\n                  {message.sender_name?.charAt(0) || '?'}\r\n                </Avatar>\r\n                <Box>\r\n                  <Typography variant=\"subtitle2\">\r\n                    {message.sender_name || 'Bilinmeyen Kullanıcı'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                    {message.content || 'Mesaj içeriği yok'}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {message.created_at ? new Date(message.created_at).toLocaleString('tr-TR') : ''}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </MenuItem>\r\n          ))\r\n        )}\r\n      </Menu>\r\n    </>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}