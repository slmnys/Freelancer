{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suleymanyasar\\\\Desktop\\\\\\xE7al\\u0131\\u015Fmalar\\\\cursor2\\\\frontend\\\\src\\\\pages\\\\ResetPassword.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, TextField, Button, Typography, Alert } from '@mui/material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  // Token varsa şifre değiştirme, yoksa email isteme formu göster\n  const isResetForm = Boolean(token);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      if (isResetForm) {\n        // Şifre değiştirme\n        if (newPassword !== confirmPassword) {\n          setError('Şifreler eşleşmiyor');\n          setLoading(false);\n          return;\n        }\n        if (newPassword.length < 6) {\n          setError('Şifre en az 6 karakter olmalıdır');\n          setLoading(false);\n          return;\n        }\n        console.log('Şifre güncelleme isteği gönderiliyor...');\n        const response = await axios.post('/api/auth/reset-password', {\n          token,\n          // URL'den gelen token\n          newPassword\n        });\n        console.log('Şifre güncelleme yanıtı:', response.data);\n        if (response.data.success) {\n          setSuccess(true);\n          setTimeout(() => {\n            navigate('/login');\n          }, 3000);\n        }\n      } else {\n        // Şifre sıfırlama bağlantısı isteme\n        await axios.post('/api/auth/forgot-password', {\n          email\n        });\n        setSuccess(true);\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Şifre güncelleme hatası:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Şifre güncellenirken bir hata oluştu');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4,\n        mt: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h1\",\n        gutterBottom: true,\n        align: \"center\",\n        children: isResetForm ? 'Yeni Şifre Belirleme' : 'Şifre Sıfırlama'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: isResetForm ? 'Şifreniz başarıyla güncellendi! Giriş sayfasına yönlendiriliyorsunuz...' : 'Şifre sıfırlama bağlantısı email adresinize gönderildi!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [isResetForm ?\n        /*#__PURE__*/\n        // Şifre değiştirme formu\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Yeni \\u015Eifre\",\n            type: \"password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            margin: \"normal\",\n            required: true,\n            disabled: loading || success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Yeni \\u015Eifre (Tekrar)\",\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            margin: \"normal\",\n            required: true,\n            disabled: loading || success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Email formu\n        _jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          margin: \"normal\",\n          required: true,\n          disabled: loading || success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 3\n          },\n          disabled: loading || success,\n          children: loading ? 'İşleniyor...' : isResetForm ? 'Şifreyi Güncelle' : 'Şifre Sıfırlama Bağlantısı Gönder'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"sil+hDMKUMMf4W8gtXSojJ3OcdU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Container","Paper","TextField","Button","Typography","Alert","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassword","_s","token","navigate","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","loading","setLoading","success","setSuccess","isResetForm","Boolean","handleSubmit","e","preventDefault","length","console","log","response","post","data","setTimeout","_error$response","_error$response2","_error$response2$data","message","maxWidth","children","elevation","sx","p","mt","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","onSubmit","fullWidth","label","type","value","onChange","target","margin","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/suleymanyasar/Desktop/çalışmalar/cursor2/frontend/src/pages/ResetPassword.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n    Container, \r\n    Paper, \r\n    TextField, \r\n    Button, \r\n    Typography, \r\n    Alert\r\n} from '@mui/material';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ResetPassword: React.FC = () => {\r\n    const { token } = useParams<{ token?: string }>();\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // Token varsa şifre değiştirme, yoksa email isteme formu göster\r\n    const isResetForm = Boolean(token);\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            if (isResetForm) {\r\n                // Şifre değiştirme\r\n                if (newPassword !== confirmPassword) {\r\n                    setError('Şifreler eşleşmiyor');\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                if (newPassword.length < 6) {\r\n                    setError('Şifre en az 6 karakter olmalıdır');\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                console.log('Şifre güncelleme isteği gönderiliyor...');\r\n                const response = await axios.post('/api/auth/reset-password', {\r\n                    token, // URL'den gelen token\r\n                    newPassword\r\n                });\r\n\r\n                console.log('Şifre güncelleme yanıtı:', response.data);\r\n\r\n                if (response.data.success) {\r\n                    setSuccess(true);\r\n                    setTimeout(() => {\r\n                        navigate('/login');\r\n                    }, 3000);\r\n                }\r\n            } else {\r\n                // Şifre sıfırlama bağlantısı isteme\r\n                await axios.post('/api/auth/forgot-password', { email });\r\n                setSuccess(true);\r\n            }\r\n        } catch (error: any) {\r\n            console.error('Şifre güncelleme hatası:', error.response?.data);\r\n            setError(error.response?.data?.message || 'Şifre güncellenirken bir hata oluştu');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Paper elevation={3} sx={{ p: 4, mt: 8 }}>\r\n                <Typography variant=\"h5\" component=\"h1\" gutterBottom align=\"center\">\r\n                    {isResetForm ? 'Yeni Şifre Belirleme' : 'Şifre Sıfırlama'}\r\n                </Typography>\r\n\r\n                {error && (\r\n                    <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n\r\n                {success && (\r\n                    <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n                        {isResetForm \r\n                            ? 'Şifreniz başarıyla güncellendi! Giriş sayfasına yönlendiriliyorsunuz...'\r\n                            : 'Şifre sıfırlama bağlantısı email adresinize gönderildi!'\r\n                        }\r\n                    </Alert>\r\n                )}\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    {isResetForm ? (\r\n                        // Şifre değiştirme formu\r\n                        <>\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Yeni Şifre\"\r\n                                type=\"password\"\r\n                                value={newPassword}\r\n                                onChange={(e) => setNewPassword(e.target.value)}\r\n                                margin=\"normal\"\r\n                                required\r\n                                disabled={loading || success}\r\n                            />\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Yeni Şifre (Tekrar)\"\r\n                                type=\"password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                margin=\"normal\"\r\n                                required\r\n                                disabled={loading || success}\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        // Email formu\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            margin=\"normal\"\r\n                            required\r\n                            disabled={loading || success}\r\n                        />\r\n                    )}\r\n\r\n                    <Button\r\n                        fullWidth\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3 }}\r\n                        disabled={loading || success}\r\n                    >\r\n                        {loading ? 'İşleniyor...' : (isResetForm ? 'Şifreyi Güncelle' : 'Şifre Sıfırlama Bağlantısı Gönder')}\r\n                    </Button>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ResetPassword; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACIC,SAAS,EACTC,KAAK,EACLC,SAAS,EACTC,MAAM,EACNC,UAAU,EACVC,KAAK,QACF,eAAe;AACtB,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAM,CAAC,GAAGT,SAAS,CAAqB,CAAC;EACjD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM8B,WAAW,GAAGC,OAAO,CAACf,KAAK,CAAC;EAElC,MAAMgB,YAAY,GAAG,MAAOC,CAAkB,IAAK;IAC/CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACA,IAAIK,WAAW,EAAE;QACb;QACA,IAAIV,WAAW,KAAKE,eAAe,EAAE;UACjCG,QAAQ,CAAC,qBAAqB,CAAC;UAC/BE,UAAU,CAAC,KAAK,CAAC;UACjB;QACJ;QAEA,IAAIP,WAAW,CAACe,MAAM,GAAG,CAAC,EAAE;UACxBV,QAAQ,CAAC,kCAAkC,CAAC;UAC5CE,UAAU,CAAC,KAAK,CAAC;UACjB;QACJ;QAEAS,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;QACtD,MAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAI,CAAC,0BAA0B,EAAE;UAC1DvB,KAAK;UAAE;UACPI;QACJ,CAAC,CAAC;QAEFgB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,QAAQ,CAACE,IAAI,CAAC;QAEtD,IAAIF,QAAQ,CAACE,IAAI,CAACZ,OAAO,EAAE;UACvBC,UAAU,CAAC,IAAI,CAAC;UAChBY,UAAU,CAAC,MAAM;YACbxB,QAAQ,CAAC,QAAQ,CAAC;UACtB,CAAC,EAAE,IAAI,CAAC;QACZ;MACJ,CAAC,MAAM;QACH;QACA,MAAMR,KAAK,CAAC8B,IAAI,CAAC,2BAA2B,EAAE;UAAErB;QAAM,CAAC,CAAC;QACxDW,UAAU,CAAC,IAAI,CAAC;MACpB;IACJ,CAAC,CAAC,OAAOL,KAAU,EAAE;MAAA,IAAAkB,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACjBR,OAAO,CAACZ,KAAK,CAAC,0BAA0B,GAAAkB,eAAA,GAAElB,KAAK,CAACc,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,CAAC;MAC/Df,QAAQ,CAAC,EAAAkB,gBAAA,GAAAnB,KAAK,CAACc,QAAQ,cAAAK,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBH,IAAI,cAAAI,qBAAA,uBAApBA,qBAAA,CAAsBC,OAAO,KAAI,sCAAsC,CAAC;IACrF,CAAC,SAAS;MACNlB,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACV,SAAS;IAAC6C,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACpBpC,OAAA,CAACT,KAAK;MAAC8C,SAAS,EAAE,CAAE;MAACC,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAJ,QAAA,gBACrCpC,OAAA,CAACN,UAAU;QAAC+C,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAACC,YAAY;QAACC,KAAK,EAAC,QAAQ;QAAAR,QAAA,EAC9DjB,WAAW,GAAG,sBAAsB,GAAG;MAAiB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,EAEZnC,KAAK,iBACFb,OAAA,CAACL,KAAK;QAACsD,QAAQ,EAAC,OAAO;QAACX,EAAE,EAAE;UAAEY,EAAE,EAAE;QAAE,CAAE;QAAAd,QAAA,EACjCvB;MAAK;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACV,EAEA/B,OAAO,iBACJjB,OAAA,CAACL,KAAK;QAACsD,QAAQ,EAAC,SAAS;QAACX,EAAE,EAAE;UAAEY,EAAE,EAAE;QAAE,CAAE;QAAAd,QAAA,EACnCjB,WAAW,GACN,yEAAyE,GACzE;MAAyD;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5D,CACV,eAEDhD,OAAA;QAAMmD,QAAQ,EAAE9B,YAAa;QAAAe,QAAA,GACxBjB,WAAW;QAAA;QACR;QACAnB,OAAA,CAAAE,SAAA;UAAAkC,QAAA,gBACIpC,OAAA,CAACR,SAAS;YACN4D,SAAS;YACTC,KAAK,EAAC,iBAAY;YAClBC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAE9C,WAAY;YACnB+C,QAAQ,EAAGlC,CAAC,IAAKZ,cAAc,CAACY,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;YAChDG,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,QAAQ,EAAE7C,OAAO,IAAIE;UAAQ;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACFhD,OAAA,CAACR,SAAS;YACN4D,SAAS;YACTC,KAAK,EAAC,0BAAqB;YAC3BC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAE5C,eAAgB;YACvB6C,QAAQ,EAAGlC,CAAC,IAAKV,kBAAkB,CAACU,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;YACpDG,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,QAAQ,EAAE7C,OAAO,IAAIE;UAAQ;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA,eACJ,CAAC;QAAA;QAEH;QACAhD,OAAA,CAACR,SAAS;UACN4D,SAAS;UACTC,KAAK,EAAC,OAAO;UACbC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEhD,KAAM;UACbiD,QAAQ,EAAGlC,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;UAC1CG,MAAM,EAAC,QAAQ;UACfC,QAAQ;UACRC,QAAQ,EAAE7C,OAAO,IAAIE;QAAQ;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CACJ,eAEDhD,OAAA,CAACP,MAAM;UACH2D,SAAS;UACTE,IAAI,EAAC,QAAQ;UACbb,OAAO,EAAC,WAAW;UACnBH,EAAE,EAAE;YAAEE,EAAE,EAAE;UAAE,CAAE;UACdoB,QAAQ,EAAE7C,OAAO,IAAIE,OAAQ;UAAAmB,QAAA,EAE5BrB,OAAO,GAAG,cAAc,GAAII,WAAW,GAAG,kBAAkB,GAAG;QAAoC;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAAC5C,EAAA,CAtIID,aAAuB;EAAA,QACPP,SAAS,EACVC,WAAW;AAAA;AAAAgE,EAAA,GAF1B1D,aAAuB;AAwI7B,eAAeA,aAAa;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}